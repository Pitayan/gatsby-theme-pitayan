{"version":3,"file":"component---gatsby-theme-pitayan-src-pages-authors-index-tsx-60a16e5589b337ac56d8.js","mappings":"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","sources":["webpack://www/../gatsby-theme-pitayan/src/components/SocialGroup/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/AuthorCard/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/Avatar/index.tsx","webpack://www/../gatsby-theme-pitayan/src/pages/authors/index.tsx"],"sourcesContent":["import React, { memo } from \"react\"\n\nimport { SOCIAL_RESOURCES } from \"@pitayan/gatsby-theme-pitayan/src/constants\"\n\ntype SocialIconsProps = {\n  icon: string\n  className?: string\n}\n\ntype SocialGroupProps = {\n  data: [string, string][]\n  className?: string\n}\n\nconst SocialIcon: React.FC<SocialIconsProps> = ({ icon, className = \"\" }) => {\n  const Icon = SOCIAL_RESOURCES[icon].icon\n\n  return <Icon className={className} />\n}\n\nconst SocialGroup: React.FC<SocialGroupProps> = ({ data, className = \"\" }) => {\n  return (\n    <ul className={`list-none grid grid-flow-col-dense auto-cols-auto ${className}`}>\n      {data.map(([sns, profile]) => {\n        let href = `${SOCIAL_RESOURCES[sns]?.url}/${profile}`\n\n        // Use the given url If the given platform id is an HTTP url or \"mailto\"\n        if (/^(?:https?:\\/\\/)/.test(profile) || /^mailto:/.test(profile)) {\n          href = profile\n        }\n\n        return (\n          <li key={sns}>\n            <a href={href} target=\"_blank\" rel=\"noreferrer\">\n              <SocialIcon className=\"site-link\" icon={sns} />\n            </a>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default memo(SocialGroup)\n","import { Link } from \"gatsby\"\nimport { ImageDataLike } from \"gatsby-plugin-image\"\nimport React, { memo } from \"react\"\n\nimport Avatar from \"../Avatar\"\nimport SocialGroup from \"../SocialGroup\"\n\ntype AuthorCardProps = {\n  avatar: {\n    normal: ImageDataLike\n    className?: string\n  }\n  bio: string\n  className?: string\n  name: string\n  initial: string\n  sns: any\n  yamlId?: string\n}\n\nconst AuthorCard: React.FC<AuthorCardProps> = ({\n  bio,\n  name,\n  initial,\n  avatar: { normal: image, className: avatarClassName = \"h-32 w-32\" },\n  sns,\n  className = \"\",\n  yamlId,\n}) => {\n  return (\n    <div className={`${className} flex flex-wrap space-x-0 sm:space-x-8`}>\n      <div className=\"w-full sm:w-auto text-center\">\n        <Avatar className={`mb-4 ${avatarClassName}`} initial={initial} image={image} />\n      </div>\n      <div className=\"flex flex-col items-stretch justify-between flex-1 text-center sm:text-left\">\n        <h3 className=\"leading-tight md:leading-tight\">\n          {name}\n          {yamlId &&\n            <Link to={`/authors/@${yamlId}`} className=\"site-link mx-2\">\n              <small>@{yamlId}</small>\n            </Link>\n          }\n        </h3>\n        <p className=\"text-base\">{bio}</p>\n        <SocialGroup className=\"max-w-lg text-xl my-0\" data={sns} />\n      </div>\n    </div>\n  )\n}\n\nexport default memo(AuthorCard)\n","import React, { memo } from \"react\"\nimport { GatsbyImage, getImage, ImageDataLike } from \"gatsby-plugin-image\"\n\ntype AvatarProps = {\n  image: ImageDataLike\n  initial: string\n  className?: string\n}\n\nconst Avatar: React.FC<AvatarProps> = ({ image, initial, className = \"\" }) => {\n  const avatarImage = getImage(image)\n\n  return avatarImage ? (\n    <GatsbyImage\n      className={`rounded-full z-0 ring-2 ring-white dark:ring-gray-600 avatar avatar-rounded ${className}`}\n      image={avatarImage}\n      alt=\"\"\n    />\n  ) : (\n    <figure\n      className={`avatar avatar-rounded bg-gray-500 text-white ring ring-white ${className}`}\n      data-initial={initial}\n    />\n  )\n}\n\nexport default memo(Avatar)\n","import { graphql, Link } from \"gatsby\"\nimport React, { memo } from \"react\"\n\nimport DefaultLayout from \"@pitayan/gatsby-theme-pitayan/src/layouts/Default\"\nimport AuthorCard from \"@pitayan/gatsby-theme-pitayan/src/components/AuthorCard\"\n\nimport { useSiteMetadata } from \"@pitayan/gatsby-theme-pitayan/src/hooks\"\nimport { ImageDataLike } from \"gatsby-plugin-image\"\n\nexport type Author = {\n  id: string\n  yamlId: string\n  name: string\n  bio: string\n  initial: string\n  avatar: {\n    normal: ImageDataLike\n  }\n  sns: [string, string][]\n}\n\ntype AuthorsProps = {\n  [key: string]: any\n  data: {\n    allAuthorsYaml: {\n      nodes: Exclude<Author, \"sns\">[]\n    }\n  }\n}\n\nconst Authors: React.FC<AuthorsProps> = ({\n  data: {\n    allAuthorsYaml: { nodes: authors },\n  },\n}) => {\n  const { siteUrl } = useSiteMetadata()\n\n  return (\n    <DefaultLayout pageUrl={`${siteUrl}/authors`} pageTitle=\"Authors\">\n      <h1 className=\"leading-tight md:leading-tight md:text-4xl text-3xl text-center mb-32\">\n        Authors ({authors.length})\n      </h1>\n      <div className=\"grid grid-flow-row grid-cols-1 md:grid-cols-2 gap-4 max-w-4xl mx-auto mb-32\">\n        {authors.map(\n          ({ name, initial, yamlId, avatar, sns, bio }) => (\n            <AuthorCard\n              className=\"p-8 bg-gray-50 border border-solid border-gray-100 dark:bg-gray-800 dark:border-gray-800 rounded\"\n              key={yamlId}\n              bio={bio}\n              name={name}\n              initial={initial}\n              avatar={avatar}\n              sns={sns}\n              yamlId={yamlId}\n            />\n          )\n        )}\n      </div>\n    </DefaultLayout>\n  )\n}\n\nexport default memo(Authors)\n\nexport const pageQuery = graphql`\n  query {\n    allAuthorsYaml(limit: 2000) {\n      nodes {\n        id\n        yamlId\n        name\n        bio\n        sns\n        initial\n        avatar {\n          normal: childImageSharp {\n            gatsbyImageData(\n              width: 480\n              placeholder: BLURRED\n              formats: [AUTO]\n            )\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["SocialIcon","icon","className","Icon","SOCIAL_RESOURCES","React","SocialGroup","data","map","sns","profile","href","_SOCIAL_RESOURCES$sns","url","test","key","target","rel","memo","AuthorCard","bio","name","initial","avatar","image","normal","avatarClassName","yamlId","Avatar","Link","to","avatarImage","getImage","GatsbyImage","alt","Authors","authors","allAuthorsYaml","nodes","siteUrl","useSiteMetadata","DefaultLayout","pageUrl","pageTitle","length"],"sourceRoot":""}