{"version":3,"file":"component---gatsby-theme-pitayan-src-pages-index-tsx-49fc8cf6cc3685cb49ff.js","mappings":"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","sources":["webpack://www/../gatsby-theme-pitayan/src/components/CategoryTags/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/PostMeta/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/PostPanel/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/PostsGroup/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/HomeSlogan/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/HomeLinks/index.tsx","webpack://www/../gatsby-theme-pitayan/src/pages/index.tsx"],"sourcesContent":["import React, { memo } from \"react\"\nimport { Link } from \"gatsby\"\n\ntype CategoryTagsProps = {\n  categories: string[]\n  className?: string\n}\n\nconst CategoryTags: React.FC<CategoryTagsProps> = ({\n  categories,\n  className\n}) => {\n  if (!categories || !categories.length) return <></>\n\n  return (\n    <div className={`flex flex-wrap gap-3 ${className}`}>\n      {categories.map((category: string, key: number) => {\n        return (\n          <Link className=\"site-tag block\" key={key} to={`/categories/${category}`}>\n            {category}\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default memo(CategoryTags)\n","import React, { memo } from \"react\"\n\ntype PostMetaProps = {\n  timeToRead: number\n  date: string\n  className?: string\n}\n\nconst PostMeta: React.FC<PostMetaProps> = ({\n  timeToRead,\n  date,\n  className = \"\",\n}) => {\n  return (\n    <span className={`text-gray-500 ${className}`}>\n      {date} â€¢ {Math.round(timeToRead)} min read\n    </span>\n  )\n}\n\nexport default memo(PostMeta)\n","import React, { memo } from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage, ImageDataLike } from \"gatsby-plugin-image\"\n\nimport CategoryTags from \"@pitayan/gatsby-theme-pitayan/src/components/CategoryTags\"\nimport PostMeta from \"@pitayan/gatsby-theme-pitayan/src/components/PostMeta\"\n\nexport type PostPanelProps = {\n  title: string\n  description: string\n  date: string\n  categories: string[]\n  hero?: {\n    normal: ImageDataLike\n  }\n  slug: string\n  timeToRead: number\n}\n\nconst PostPanel: React.FC<PostPanelProps> = ({\n  title,\n  description,\n  date,\n  categories,\n  hero,\n  timeToRead,\n  slug,\n}) => {\n  const image = getImage(hero?.normal)\n\n  return (\n    <div className=\"panel\">\n      <Link to={slug}>\n        {image ? (\n          <div className=\"panel-image\">\n            <GatsbyImage image={image} alt=\"\" />\n          </div>\n        ) : null}\n        <h3>{title}</h3>\n      </Link>\n      <p className=\"panel-content\">{description}</p>\n      <CategoryTags categories={categories} />\n      <br />\n      <span className=\"panel-footer\">\n        <PostMeta timeToRead={timeToRead} date={date} />\n      </span>\n    </div>\n  )\n}\n\nexport default memo(PostPanel)\n","import React, { memo } from \"react\"\nimport PostPanel from \"@pitayan/gatsby-theme-pitayan/src/components/PostPanel\"\nimport { ImageDataLike } from \"gatsby-plugin-image\"\n\nexport type PostNode = {\n  id: string\n  timeToRead: number\n  frontmatter: {\n    categories: string[]\n    date: string\n    description: string\n    hero: {\n      normal: ImageDataLike\n    }\n    title: string\n  }\n  fields: {\n    slug: string\n  }\n}\n\ntype PostsProps = {\n  posts: PostNode[]\n  className?: string\n}\n\nconst PostsGroup: React.FC<PostsProps> = ({\n  posts,\n  className = \"\",\n}) => {\n  return (\n    <div className={className}>\n      {posts.map(\n        ({\n          id,\n          timeToRead,\n          frontmatter: { categories, date, description, hero, title },\n          fields: { slug },\n        }) => (\n          <PostPanel\n            key={id}\n            title={title}\n            description={description}\n            date={date}\n            categories={categories}\n            hero={hero}\n            slug={slug}\n            timeToRead={timeToRead}\n          />\n        )\n      )}\n    </div>\n  )\n}\n\nexport default memo(PostsGroup)\n","import React, { memo } from \"react\"\nimport { useSiteMetadata } from \"@pitayan/gatsby-theme-pitayan/src/hooks\"\n\nconst HomeSlogan: React.FC = () => {\n  const { siteSlogan } = useSiteMetadata()\n\n  return (\n    <div className=\"max-w-2xl\">\n      <h1 className=\"leading-tight md:leading-tight md:text-5xl text-4xl\">\n        {siteSlogan}\n      </h1>\n    </div>\n  )\n}\n\nexport default memo(HomeSlogan)\n","import React, { memo } from \"react\"\nimport { useSiteMetadata } from \"@pitayan/gatsby-theme-pitayan/src/hooks\"\nimport NavigationLinksGroup from \"@pitayan/gatsby-theme-pitayan/src/components/NavigationLinksGroup\"\n\nconst HomeLinks: React.FC = () => {\n  const { siteLinks } = useSiteMetadata()\n\n  if (!siteLinks.some(s => s.group.includes(\"home\"))) {\n    return null\n  }\n\n  return (\n    <div className=\"flex flex-wrap\">\n      <NavigationLinksGroup\n        group=\"home\"\n        data={siteLinks}\n        className=\"mr-6 py-2\"\n      />\n    </div>\n  )\n}\n\nexport default memo(HomeLinks)\n","import React, { memo } from \"react\"\nimport { graphql, navigate } from \"gatsby\"\n\nimport DefaultLayout from \"@pitayan/gatsby-theme-pitayan/src/layouts/Default\"\nimport HomeSlogan from \"@pitayan/gatsby-theme-pitayan/src/components/HomeSlogan\"\nimport HomeLinks from \"@pitayan/gatsby-theme-pitayan/src/components/HomeLinks\"\nimport PostsGroup, {\n  PostNode,\n} from \"@pitayan/gatsby-theme-pitayan/src/components/PostsGroup\"\n\ntype HomePageProps = {\n  data: {\n    allMdx: {\n      nodes: PostNode[]\n    }\n  }\n}\n\nconst HomePage: React.FC<HomePageProps> = ({\n  data: {\n    allMdx: { nodes: posts },\n  },\n}) => {\n  return (\n    <DefaultLayout pageTitle=\"Home\">\n      <HomeSlogan />\n      <br />\n      <br />\n      <HomeLinks />\n      <hr className=\"mt-4 mb-12 border-gray-300\" />\n      <PostsGroup\n        posts={posts}\n        className=\"grid relative grid-cols-1 md:grid-cols-2 gap-8\"\n      />\n      <div className=\"text-center my-24\">\n        <button\n          className=\"font-bold text-xl rounded px-4 py-2 dark:hover:bg-gray-800 hover:bg-gray-200 transition-colors duration-75\"\n          onClick={() => navigate(\"/posts\")}\n        >\n          <span className=\"\">See More ...</span>\n        </button>\n      </div>\n    </DefaultLayout>\n  )\n}\n\nexport default memo(HomePage)\n\nexport const pageQuery = graphql`\n  query HomePageQuery {\n    allMdx(\n      filter: {\n        internal: {\n          contentFilePath: { regex: \"/content/posts/\" }\n        }\n      }\n      sort: [\n        {\n          frontmatter: {\n            date: DESC\n          }\n        },\n        {\n          frontmatter: {\n            title: DESC\n          }\n        }\n      ]\n      limit: 12\n    ) {\n      nodes {\n        id\n        timeToRead\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          categories\n          date(formatString: \"MMMM Do, YYYY\")\n          hero {\n            normal: childImageSharp {\n              gatsbyImageData(\n                width: 768\n                placeholder: BLURRED\n                formats: [AUTO]\n              )\n            }\n          }\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["CategoryTags","_ref","categories","className","length","React","map","category","key","Link","to","memo","PostMeta","timeToRead","date","Math","round","PostPanel","title","description","hero","slug","image","getImage","normal","GatsbyImage","alt","PostsGroup","posts","_ref2","id","frontmatter","fields","HomeSlogan","siteSlogan","useSiteMetadata","HomeLinks","siteLinks","some","s","group","includes","NavigationLinksGroup","data","HomePage","allMdx","nodes","DefaultLayout","pageTitle","onClick","navigate"],"sourceRoot":""}