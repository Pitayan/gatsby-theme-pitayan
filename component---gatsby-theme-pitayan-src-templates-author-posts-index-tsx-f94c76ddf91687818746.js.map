{"version":3,"file":"component---gatsby-theme-pitayan-src-templates-author-posts-index-tsx-f94c76ddf91687818746.js","mappings":"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","sources":["webpack://www/../gatsby-theme-pitayan/src/components/SocialGroup/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/AuthorCard/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/Avatar/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/CategoryTags/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/Pagination/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/PostMeta/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/PostPanel/index.tsx","webpack://www/../gatsby-theme-pitayan/src/components/PostsGroup/index.tsx","webpack://www/../gatsby-theme-pitayan/src/templates/authorPosts/index.tsx"],"sourcesContent":["import React, { memo } from \"react\"\n\nimport { SOCIAL_RESOURCES } from \"@pitayan/gatsby-theme-pitayan/src/constants\"\n\ntype SocialIconsProps = {\n  icon: string\n  className?: string\n}\n\ntype SocialGroupProps = {\n  data: [string, string][]\n  className?: string\n}\n\nconst SocialIcon: React.FC<SocialIconsProps> = ({ icon, className = \"\" }) => {\n  const Icon = SOCIAL_RESOURCES[icon].icon\n\n  return <Icon className={className} />\n}\n\nconst SocialGroup: React.FC<SocialGroupProps> = ({ data, className = \"\" }) => {\n  return (\n    <ul className={`list-none grid grid-flow-col-dense auto-cols-auto ${className}`}>\n      {data.map(([sns, profile]) => {\n        let href = `${SOCIAL_RESOURCES[sns]?.url}/${profile}`\n\n        // Use the given url If the given platform id is an HTTP url or \"mailto\"\n        if (/^(?:https?:\\/\\/)/.test(profile) || /^mailto:/.test(profile)) {\n          href = profile\n        }\n\n        return (\n          <li key={sns}>\n            <a href={href} target=\"_blank\" rel=\"noreferrer\">\n              <SocialIcon className=\"site-link\" icon={sns} />\n            </a>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default memo(SocialGroup)\n","import { Link } from \"gatsby\"\nimport { ImageDataLike } from \"gatsby-plugin-image\"\nimport React, { memo } from \"react\"\n\nimport Avatar from \"../Avatar\"\nimport SocialGroup from \"../SocialGroup\"\n\ntype AuthorCardProps = {\n  avatar: {\n    normal: ImageDataLike\n    className?: string\n  }\n  bio: string\n  className?: string\n  name: string\n  initial: string\n  sns: any\n  yamlId?: string\n}\n\nconst AuthorCard: React.FC<AuthorCardProps> = ({\n  bio,\n  name,\n  initial,\n  avatar: { normal: image, className: avatarClassName = \"h-32 w-32\" },\n  sns,\n  className = \"\",\n  yamlId,\n}) => {\n  return (\n    <div className={`${className} flex flex-wrap space-x-0 sm:space-x-8`}>\n      <div className=\"w-full sm:w-auto text-center\">\n        <Avatar className={`mb-4 ${avatarClassName}`} initial={initial} image={image} />\n      </div>\n      <div className=\"flex flex-col items-stretch justify-between flex-1 text-center sm:text-left\">\n        <h3 className=\"leading-tight md:leading-tight\">\n          {name}\n          {yamlId &&\n            <Link to={`/authors/@${yamlId}`} className=\"site-link mx-2\">\n              <small>@{yamlId}</small>\n            </Link>\n          }\n        </h3>\n        <p className=\"text-base\">{bio}</p>\n        <SocialGroup className=\"max-w-lg text-xl my-0\" data={sns} />\n      </div>\n    </div>\n  )\n}\n\nexport default memo(AuthorCard)\n","import React, { memo } from \"react\"\nimport { GatsbyImage, getImage, ImageDataLike } from \"gatsby-plugin-image\"\n\ntype AvatarProps = {\n  image: ImageDataLike\n  initial: string\n  className?: string\n}\n\nconst Avatar: React.FC<AvatarProps> = ({ image, initial, className = \"\" }) => {\n  const avatarImage = getImage(image)\n\n  return avatarImage ? (\n    <GatsbyImage\n      className={`rounded-full z-0 ring-2 ring-white dark:ring-gray-600 avatar avatar-rounded ${className}`}\n      image={avatarImage}\n      alt=\"\"\n    />\n  ) : (\n    <figure\n      className={`avatar avatar-rounded bg-gray-500 text-white ring ring-white ${className}`}\n      data-initial={initial}\n    />\n  )\n}\n\nexport default memo(Avatar)\n","import React, { memo } from \"react\"\nimport { Link } from \"gatsby\"\n\ntype CategoryTagsProps = {\n  categories: string[]\n  className?: string\n}\n\nconst CategoryTags: React.FC<CategoryTagsProps> = ({\n  categories,\n  className\n}) => {\n  if (!categories || !categories.length) return <></>\n\n  return (\n    <div className={`flex flex-wrap gap-3 ${className}`}>\n      {categories.map((category: string, key: number) => {\n        return (\n          <Link className=\"site-tag block\" key={key} to={`/categories/${category}`}>\n            {category}\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default memo(CategoryTags)\n","import React, { memo } from \"react\"\nimport { Link } from \"gatsby\"\n\nexport type PageInfo = {\n  currentPage: number\n  hasNextPage: boolean\n  hasPreviousPage: boolean\n  pageCount: number\n}\n\ntype PaginationProps = {\n  pageInfo: PageInfo\n  path: string\n}\n\nconst Pagination: React.FC<PaginationProps> = ({\n  pageInfo: { currentPage, hasNextPage, hasPreviousPage, pageCount },\n  path,\n}) => {\n  const itemClass = (i: number) =>\n    currentPage == i + 1 ? \"pagination-item active\" : \"pagination-item\"\n  return (\n    <ul className=\"pagination text-center\">\n      {hasPreviousPage ? (\n        <li className=\"pagination-item\">\n          <Link to={`/${path}/${currentPage - 1}`}>Prev</Link>\n        </li>\n      ) : null}\n      {Array.from({ length: pageCount }).map((_, i: number): any => {\n        return (\n          <li key={i + 1} className={itemClass(i)}>\n            <Link to={`/${path}/${i + 1}`}>{i + 1}</Link>\n          </li>\n        )\n      })}\n      {hasNextPage ? (\n        <li className=\"pagination-item\">\n          <Link to={`/${path}/${currentPage + 1}`}>Next</Link>\n        </li>\n      ) : null}\n    </ul>\n  )\n}\n\nexport default memo(Pagination)\n","import React, { memo } from \"react\"\n\ntype PostMetaProps = {\n  timeToRead: number\n  date: string\n  className?: string\n}\n\nconst PostMeta: React.FC<PostMetaProps> = ({\n  timeToRead,\n  date,\n  className = \"\",\n}) => {\n  return (\n    <span className={`text-gray-500 ${className}`}>\n      {date} • {Math.round(timeToRead)} min read\n    </span>\n  )\n}\n\nexport default memo(PostMeta)\n","import React, { memo } from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage, ImageDataLike } from \"gatsby-plugin-image\"\n\nimport CategoryTags from \"@pitayan/gatsby-theme-pitayan/src/components/CategoryTags\"\nimport PostMeta from \"@pitayan/gatsby-theme-pitayan/src/components/PostMeta\"\n\nexport type PostPanelProps = {\n  title: string\n  description: string\n  date: string\n  categories: string[]\n  hero?: {\n    normal: ImageDataLike\n  }\n  slug: string\n  timeToRead: number\n}\n\nconst PostPanel: React.FC<PostPanelProps> = ({\n  title,\n  description,\n  date,\n  categories,\n  hero,\n  timeToRead,\n  slug,\n}) => {\n  const image = getImage(hero?.normal)\n\n  return (\n    <div className=\"panel\">\n      <Link to={slug}>\n        {image ? (\n          <div className=\"panel-image\">\n            <GatsbyImage image={image} alt=\"\" />\n          </div>\n        ) : null}\n        <h3>{title}</h3>\n      </Link>\n      <p className=\"panel-content\">{description}</p>\n      <CategoryTags categories={categories} />\n      <br />\n      <span className=\"panel-footer\">\n        <PostMeta timeToRead={timeToRead} date={date} />\n      </span>\n    </div>\n  )\n}\n\nexport default memo(PostPanel)\n","import React, { memo } from \"react\"\nimport PostPanel from \"@pitayan/gatsby-theme-pitayan/src/components/PostPanel\"\nimport { ImageDataLike } from \"gatsby-plugin-image\"\n\nexport type PostNode = {\n  id: string\n  timeToRead: number\n  frontmatter: {\n    categories: string[]\n    date: string\n    description: string\n    hero: {\n      normal: ImageDataLike\n    }\n    title: string\n  }\n  fields: {\n    slug: string\n  }\n}\n\ntype PostsProps = {\n  posts: PostNode[]\n  className?: string\n}\n\nconst PostsGroup: React.FC<PostsProps> = ({\n  posts,\n  className = \"\",\n}) => {\n  return (\n    <div className={className}>\n      {posts.map(\n        ({\n          id,\n          timeToRead,\n          frontmatter: { categories, date, description, hero, title },\n          fields: { slug },\n        }) => (\n          <PostPanel\n            key={id}\n            title={title}\n            description={description}\n            date={date}\n            categories={categories}\n            hero={hero}\n            slug={slug}\n            timeToRead={timeToRead}\n          />\n        )\n      )}\n    </div>\n  )\n}\n\nexport default memo(PostsGroup)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport DefaultLayout from \"@pitayan/gatsby-theme-pitayan/src/layouts/Default\"\nimport Pagination, {\n  PageInfo,\n} from \"@pitayan/gatsby-theme-pitayan/src/components/Pagination\"\nimport AuthorCard from \"@pitayan/gatsby-theme-pitayan/src/components/AuthorCard\"\nimport PostsGroup, {\n  PostNode,\n} from \"@pitayan/gatsby-theme-pitayan/src/components/PostsGroup\"\nimport { Author } from \"@pitayan/gatsby-theme-pitayan/src/pages/authors\"\n\nimport { useSiteMetadata } from \"@pitayan/gatsby-theme-pitayan/src/hooks\"\n\ntype AuthorPostsProps = {\n  data: {\n    allMdx: {\n      nodes: PostNode[]\n      pageInfo: PageInfo\n    }\n    authorsYaml: Author\n  }\n  pageContext: {\n    authorId: string\n  }\n}\n\nconst AuthorPosts: React.FC<AuthorPostsProps> = ({\n  data: {\n    allMdx: { nodes: posts, pageInfo },\n    authorsYaml: { bio, name, initial, avatar, sns },\n  },\n  pageContext: { authorId },\n}) => {\n  const { siteUrl } = useSiteMetadata()\n\n  return (\n    <DefaultLayout\n      pageUrl={`${siteUrl}/authors/@${authorId}`}\n      pageTitle={`Posts of ${name}`}\n    >\n      <AuthorCard\n        className=\"mb-24 p-8 bg-gray-50 border border-solid border-gray-100 dark:bg-gray-800 dark:border-gray-800 rounded mx-auto max-w-2xl\"\n        bio={bio}\n        name={name}\n        initial={initial}\n        avatar={avatar}\n        sns={sns}\n      />\n      <PostsGroup\n        posts={posts}\n        className=\"grid relative grid-cols-1 md:grid-cols-2 gap-8\"\n      />\n      <div className=\"my-24\">\n        <Pagination pageInfo={pageInfo} path={`authors/@${authorId}`} />\n      </div>\n    </DefaultLayout>\n  )\n}\n\nexport default AuthorPosts\n\nexport const pageQuery = graphql`\n  query ($limit: Int!, $skip: Int!, $authorId: String!) {\n    allMdx(\n      sort: {\n        frontmatter: {\n          date: DESC\n        }\n      }\n      filter: {\n        frontmatter: { author: { elemMatch: { yamlId: { in: [$authorId] } } } }\n        internal: {\n          contentFilePath: { regex: \"/content/posts/\" }\n        }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      pageInfo {\n        currentPage\n        hasNextPage\n        hasPreviousPage\n        pageCount\n      }\n      nodes {\n        id\n        timeToRead\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          categories\n          date(formatString: \"MMMM Do, YYYY\")\n          hero {\n            normal: childImageSharp {\n              gatsbyImageData(\n                width: 768\n                placeholder: BLURRED\n                formats: [AUTO]\n              )\n            }\n          }\n          description\n        }\n      }\n    }\n    authorsYaml(yamlId: { eq: $authorId }) {\n      id\n      yamlId\n      name\n      initial\n      bio\n      joined\n      avatar {\n        normal: childImageSharp {\n          gatsbyImageData(\n            width: 480\n            placeholder: BLURRED\n            formats: [AUTO]\n          )\n        }\n      }\n      sns\n    }\n  }\n`\n"],"names":["SocialIcon","_ref","icon","className","Icon","SOCIAL_RESOURCES","React","SocialGroup","_ref2","data","map","_ref3","sns","profile","href","_SOCIAL_RESOURCES$sns","url","test","key","target","rel","memo","AuthorCard","bio","name","initial","avatar","normal","image","avatarClassName","yamlId","Avatar","Link","to","avatarImage","getImage","GatsbyImage","alt","CategoryTags","categories","length","category","Pagination","pageInfo","currentPage","hasNextPage","hasPreviousPage","pageCount","path","itemClass","i","Array","from","_","PostMeta","timeToRead","date","Math","round","PostPanel","title","description","hero","slug","PostsGroup","posts","id","frontmatter","fields","allMdx","nodes","authorsYaml","pageContext","authorId","siteUrl","useSiteMetadata","DefaultLayout","pageUrl","pageTitle"],"sourceRoot":""}